#!/usr/bin/lua

if 0 == os.execute("test -e .fm") then
	dofile(".fm");
end;

function ProperNounize(str)
	assert(type(str)=="string", "str must be a string");
	local first=str:sub(1,1):upper();
	return first..str:sub(2);
end;

local commands;
commands = setmetatable({
	init=function(project)
		if not project then
			return print("Usage: fm init <project>");
		end;
		return os.execute("fm-init.sh "..ProperNounize(project));
	end,
	[{"help","h", "?"}]=function()
		local cmds={};
		for k,v in pairs(commands) do
			if type(k) == "table" then
				table.insert(cmds, k[1]);
			else
				table.insert(cmds, k[1]);
			end;
		end;
		local l="";
		for i=1,#cmds do
			l=l..cmds[i];
			if i<#cmds then
				l=l.."|";
			end;
		end;
		print(("Usage: [%s] <options>"):format(l));
	end,
	[{"new","n","create","c"}]=function(name)
		if not name then
			return print("Usage: fm new <name>");
		end;
		os.execute("fm-new.sh " .. ProperNounize(name));
	end,
	[{"update","u","up"}]=function(name)
		name=name or "";
		os.execute("fm-update.sh " .. ProperNounize(name));
	end
}, {
	__index=function(self, key)
		for k,v in pairs(self) do
			if type(k) == "table" then
				for i=1,#k do
					if k[i]==key then
						return self[k];
					end;
				end;
			end;
		end;
		return function()
			os.execute("fm-bin.sh " .. key)
		end;
	end
});

local c=table.remove(arg,1);

commands[c](unpack(arg));
